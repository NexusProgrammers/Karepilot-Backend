"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const adminController_1 = require("../../controllers/adminController");
const auth_1 = require("../../middlewares/auth");
const upload_1 = require("../../middlewares/upload");
const adminUserSchemas_1 = require("../../validations/adminUserSchemas");
const adminUser_1 = require("../../models/adminUser");
const utils_1 = require("../../utils");
const adminRouter = (0, express_1.Router)();
adminRouter.post("/register", (0, utils_1.validate)(adminUserSchemas_1.adminUserRegistrationSchema), adminController_1.registerAdminUser);
adminRouter.post("/login", (0, utils_1.validate)(adminUserSchemas_1.adminUserLoginSchema), adminController_1.loginAdminUser);
adminRouter.get("/roles-permissions", adminController_1.getAdminRolesAndPermissions);
adminRouter.use(auth_1.authenticateAdmin);
adminRouter.get("/profile", adminController_1.getAdminProfile);
adminRouter.put("/profile", upload_1.uploadSingleImage, (0, utils_1.validate)(adminUserSchemas_1.adminUserUpdateSchema), adminController_1.updateAdminProfile);
adminRouter.put("/change-password", (0, utils_1.validate)(adminUserSchemas_1.adminPasswordChangeSchema), adminController_1.changeAdminPassword);
adminRouter.get("/users", (0, utils_1.validate)(adminUserSchemas_1.adminUserQuerySchema, "query"), (0, auth_1.requireAnyPermission)([adminUser_1.Permission.EDIT_USERS, adminUser_1.Permission.DELETE_USERS]), adminController_1.getAllAdminUsers);
adminRouter.get("/users/:id", (0, utils_1.validate)(adminUserSchemas_1.adminUserIdParamSchema, "params"), (0, auth_1.requireAnyPermission)([adminUser_1.Permission.EDIT_USERS, adminUser_1.Permission.DELETE_USERS]), adminController_1.getAdminUserById);
adminRouter.put("/users/:id", (0, utils_1.validate)(adminUserSchemas_1.adminUserIdParamSchema, "params"), (0, auth_1.requirePermission)(adminUser_1.Permission.EDIT_USERS), (0, utils_1.validate)(adminUserSchemas_1.adminUserUpdateSchema), adminController_1.updateAdminUserById);
adminRouter.delete("/users/:id", (0, utils_1.validate)(adminUserSchemas_1.adminUserIdParamSchema, "params"), (0, auth_1.requirePermission)(adminUser_1.Permission.DELETE_USERS), adminController_1.deleteAdminUser);
exports.default = adminRouter;
//# sourceMappingURL=admin.js.map